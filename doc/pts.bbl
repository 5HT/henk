\begin{thebibliography}{10}

\bibitem{Kaposi16}
Thorsten Altenkirch and Ambrus Kaposi.
\newblock Type theory in type theory using quotient inductive types.
\newblock In {\em Proceedings of the 43rd Annual ACM SIGPLAN-SIGACT Symposium
  on Principles of Programming Languages}, POPL '16, pages 18--29, New York,
  NY, USA, 2016. ACM.

\bibitem{Henk93}
H.~P. Barendregt.
\newblock In S.~Abramsky, Dov~M. Gabbay, and S.~E. Maibaum, editors, {\em
  Handbook of Logic in Computer Science (Vol. 2)}, pages 117--309, New York,
  NY, USA, 1992. Oxford University Press, Inc.

\bibitem{Barthe95}
Gilles Barthe.
\newblock {\em Extensions of pure type systems}, pages 16--31.
\newblock Springer Berlin Heidelberg, Berlin, Heidelberg, 1995.

\bibitem{Bohm85}
Corrado B{\"o}hm and Alessandro Berarducci.
\newblock Automatic synthesis of typed lambda-programs on term algebras.
\newblock In {\em Theoretical Computer Science}, volume~39, pages 135--154,
  1985.

\bibitem{Mortberg17}
Cyril Cohen, Thierry Coquand, Simon Huber, and Anders M{\"{o}}rtberg.
\newblock In {\em Cubical Type Theory: a constructive interpretation of the
  univalence axiom}, volume abs/1611.02108, 2017.

\bibitem{Coq96}
Thierry Coquand.
\newblock An algorithm for type-checking dependent types.
\newblock In {\em Sci. Comput. Program.}, volume~26, pages 167--177, 1996.

\bibitem{Coq88}
Thierry Coquand and Gerard Huet.
\newblock The calculus of constructions.
\newblock In {\em Information and Computation}, pages 95--120, Duluth, MN, USA,
  1988. Academic Press, Inc.

\bibitem{Dagand13}
P.{\'E}. Dagand, University of~Strathclyde. Department~of Computer, and
  PhD~thesis Information~Sciences.
\newblock {\em A Cosmology of Datatypes: Reusability and Dependent Types}.
\newblock 2013.

\bibitem{Fu14}
Peng Fu and Aaron Stump.
\newblock Self types for dependently typed lambda encodings.
\newblock In {\em Rewriting and Typed Lambda Calculi - Joint International
  Conference, {RTA-TLCA} 2014, Held as Part of the Vienna Summer of Logic,
  {VSL} 2014, Vienna, Austria, July 14-17, 2014. Proceedings}, pages 224--239,
  2014.

\bibitem{Geuvers01}
Herman Geuvers.
\newblock {\em Induction Is Not Derivable in Second Order Dependent Type
  Theory}, pages 166--181.
\newblock Springer Berlin Heidelberg, Berlin, Heidelberg, 2001.

\bibitem{Hamana11}
Makoto Hamana and Marcelo~P. Fiore.
\newblock A foundation for gadts and inductive families: dependent polynomial
  functor approach.
\newblock In {\em Proceedings of the seventh {ACM} {SIGPLAN} workshop on
  Generic programming, WGP@ICFP 2011, Tokyo, Japan, September 19-21, 2011},
  pages 59--70, 2011.

\bibitem{Hinze13}
Ralf Hinze and Nicolas Wu.
\newblock Histo- and dynamorphisms revisited.
\newblock In {\em Proceedings of the 9th ACM SIGPLAN Workshop on Generic
  Programming}, WGP '13, pages 1--12, New York, NY, USA, 2013. ACM.

\bibitem{Erik97}
Simon~Peyton Jones and Erik Meijer.
\newblock Henk: A typed intermediate language.
\newblock In {\em In Proc. First Int'l Workshop on Types in Compilation}, 1997.

\bibitem{Lof84}
P.~Martin-L{\"o}f and G.~Sambin.
\newblock {\em Intuitionistic type theory}.
\newblock Studies in proof theory. Bibliopolis, 1984.

\bibitem{Ore92}
Christian-Emil Ore.
\newblock The extended calculus of constructions (ecc) with inductive types.
\newblock In {\em Information and Computation}, volume~99, pages 231 -- 264,
  1992.

\bibitem{Mohring15}
Christine Paulin-Mohring.
\newblock {Introduction to the Calculus of Inductive Constructions}.
\newblock In Bruno~Woltzenlogel Paleo and David Delahaye, editors, {\em {All
  about Proofs, Proofs for All}}, volume~55 of {\em Studies in Logic
  (Mathematical logic and foundations)}. {College Publications}, January 2015.

\bibitem{Stump17}
Aaron Stump.
\newblock The calculus of dependent lambda eliminations.
\newblock In {\em Journal of Functional Programming}, volume~27. Cambridge
  University Press, 2017.

\end{thebibliography}
